# This workflow requires a `./slsa_build.sh` at the repository root to run your build.
# Building and attesting are performed in two separated Jobs to elevate to SLSA3.
# Example:

# jobs:
#   build-and-attest:
#     permissions:
#       id-token: write
#       attestations: write
#       contents: read
#     uses: ramonpetgrave/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml@dev
#     with:
#       subject-path: |
#         ./gundam
#         ./myhero

name: Attest Build Provenance SLSA3 Resuable Workflow

permissions: {}

on:
  workflow_call:
    inputs:
      build-artifact-name:
        description: >
          The name of Github workflow artifact to store the subject files
        default: slsa3_build_artifact
        required: false
        type: string
      build-attestation-name:
        description: >
          The name of Github workflow artifact to store the attestation bundle file
        default: slsa3_build_attestation
        required: false
        type: string
      subject-path:
        description: >
          Path to the artifact serving as the subject of the attestation. May contain a
          glob pattern or list of paths (total subject count cannot exceed 2500).
          See https://github.com/actions/upload-artifact?tab=readme-ov-file#examples.
        required: true
        type: string
      show-summary:
        description: >
          Whether to attach a list of generated attestations to the workflow run
          summary page. Defaults to true.
        default: true
        required: false
        type: boolean
      github-token:
        description: >
          The GitHub token used as environment variable GH_TOKEN to ./slsa_build.sh.
        default: ${{ github.token }}
        required: false
        type: string
      build-runner-label:
        description: >
          The runner label to pass to `runs-on:`. e.g., "ubuntu-latest". 
        required: true
        type: string

jobs:
  build:
    outputs:
      job-id: ${{ github.job }}
    permissions:
      contents: read
    runs-on: ${{ inputs.build-runner-label }}
    steps:
      - name: detect-runner
        if: ${{ runner.environment != 'github-hosted' }}
        run: echo "self-hosted runner detected, failing job!" && exit 1
      - name: checkout-source-repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
      - name: slsa-build
        if: ${{ runner.environment == 'github-hosted' }}
        uses: ./.github/actions/slsa-build
        env:
          GITHUB_TOKEN: ${{ inputs.subject-path }}
      - name: upload-artifact
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a #v4.3.6
        with:
          name: ${{ inputs.build-artifact-name }}
          path: ${{ inputs.subject-path }}
          if-no-files-found: error

  attest:
    needs: build
    permissions:
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: debug-context
        run: |
          echo github.job ${{ github.job }}
          echo github.workflow ${{ github.workflow }}
      - name: detect-runner
        if: ${{ runner.environment != 'github-hosted' }}
        run: echo "self-hosted runner detected, failing job!" && exit 1
      - name: build-detect-check
        # Get the job id number of `slsa3-build`. Then get the logs of the "Set up job" activity.
        # these logs contain markers that identity use of self-hosted runners.
        # "Machine name:" should only appear in the logs for self-hosted runners.
        # See
        # - https://github.com/actions/runner/pull/539/files#diff-e10dd2daf26c47f8e2914b189bbbc8043bdcd073c633c9a2d29d67f0ec3b4581R77
        # - https://github.com/orgs/community/discussions/111347#discussioncomment-10490619
        env:
          WORKFLOW_NAME: 
          RUN_ID: ${}
          BUILD_JOB_ID: ${{ needs.build.outputs.job-id }}
          RUN_ATTEMPT: ${{ github.run_attempt }}
          GH_TOKEN: ${{ github.token }}
        run: |
            # $BUILD_JOB_ID=$( gh run view "$RUN_ID" --attempt "$RUN_ATTEMPT" --json jobs | jq '.jobs[] | select(.name|endswith("/ build")) | .databaseId' )
            JOB_LOGS=$( gh run view "$RUN_ID" --job "$BUILD_JOB_ID" --log | sed -n -e '/Set up job/I,/Complete job name/I p' )
            if grep -qi "Machine name:" <<< $JOB_LOGS; then
                echo "detected a self-hosted runner, aborting attestation!"
                exit 1
            else
                echo "self-hosted runner not detected."
                exit 0
            fi
      - name: download-artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: ${{ inputs.build-artifact-name }}
      - name: attest-build-provenance
        if: ${{ runner.environment == 'github-hosted' }}
        id: attest-build-provenance
        uses: actions/attest-build-provenance@310b0a4a3b0b78ef57ecda988ee04b132db73ef8 # v1.4.1
        with:
          subject-path: ${{ inputs.subject-path }}
          show-summary: ${{ inputs.show-summary }}
      - name: upload-provenance
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a #v4.3.6
        with:
          name: ${{ inputs.build-attestation-name }}
          path: ${{ steps.attest-build-provenance.outputs.bundle-path }}
          if-no-files-found: error

  verify:
    needs: attest
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      LOCAL_ATTESTATION_FILEPATH: ./attestation.jsonl
      ARTIFACTS_FOLDER: ./artifacts
      # OWNER: ramonpetgrave
      REPO: ramonpetgrave/github-build-attestations-rw
      # SIGNER_REPO: ramonpetgrave/ramonpetgrave
      SIGNER_WORKFLOW: >-
        ramonpetgrave/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml
      SIGNER_WORKFLOW_AND_REF: >-
        ramonpetgrave/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml@refs/heads/dev
      CERT_IDENTITY: >-
        https://github.com/ramonpetgrave/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml@refs/heads/dev
      # CERT_IDENTITY_REGEX: >-
        # ^https://github.com/ramonpetgrave/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml@v[0-9].[0-9].[0-9]$
    steps:
      - name: detect-runner
        if: ${{ runner.environment != 'github-hosted' }}
        run: echo "self-hosted runner detected, failing job!" && exit 1
      - name: download-artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: ${{ inputs.build-artifact-name }}
          path: ${{ env.ARTIFACTS_FOLDER }}
      - name: download-attestation
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: ${{ inputs.build-attestation-name }}
      - name: ls
        run: ls -lahR
      - name: online-with-cert-identity
        run: |
          for FILE in "$ARTIFACTS_FOLDER"/*; do
            gh attestation verify \
              $FILE \
              --deny-self-hosted-runners \
              --repo "$REPO" \
              --cert-identity "$CERT_IDENTITY"
          done
      # see https://github.com/cli/cli/issues/9521
      - name: fix-local-attestation-bundle
        run: truncate -s -1 "$LOCAL_ATTESTATION_FILEPATH"
      - name: offline-local-attestation-with-cert-identity
        run: |
          for FILE in "$ARTIFACTS_FOLDER"/*; do
            gh attestation verify \
              $FILE \
              --deny-self-hosted-runners \
              --repo "$REPO" \
              --cert-identity "$CERT_IDENTITY" \
              --bundle "$LOCAL_ATTESTATION_FILEPATH"
          done
      - name: offline-downloaded-attestation-with-cert-identity-with-branch-main
        run: |
          for FILE in "$ARTIFACTS_FOLDER"/*; do
            gh attestation verify \
              $FILE \
              --deny-self-hosted-runners \
              --repo "$REPO" \
              --cert-identity "$CERT_IDENTITY" \
              --bundle "$LOCAL_ATTESTATION_FILEPATH" \
            | jq --exit-status '.[].verificationResult.signature.certificate.sourceRepositoryRef | select(.=="refs/heads/main")'
          done
